/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  INexusInterface,
  INexusInterfaceInterface,
} from "../../../contracts/interfaces/INexusInterface";

const _abi = [
  {
    inputs: [],
    name: "AddressAlreadyWhitelisted",
    type: "error",
  },
  {
    inputs: [],
    name: "AddressNotWhitelisted",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidKeySupplied",
    type: "error",
  },
  {
    inputs: [],
    name: "KeyNotDeposited",
    type: "error",
  },
  {
    inputs: [],
    name: "NexusAddressNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "NotNexusBot",
    type: "error",
  },
  {
    inputs: [],
    name: "RollupAlreadyPresent",
    type: "error",
  },
  {
    inputs: [],
    name: "RollupAlreadyRegistered",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "clusterId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64[]",
        name: "operatorIds",
        type: "uint64[]",
      },
    ],
    name: "ClusterAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "clusterId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ClusterRecharged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "rollupAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawalAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "stakingLimit",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "operatorCluster",
        type: "uint32",
      },
    ],
    name: "RollupRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "slashing",
        type: "bool",
      },
    ],
    name: "RollupRewardsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rollupAddress",
        type: "address",
      },
    ],
    name: "RollupWhitelisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "SSVRecharged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "rollupAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "oldStakingLimit",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "newStakingLimit",
        type: "uint16",
      },
    ],
    name: "StakingLimitChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "pubKey",
        type: "bytes",
      },
    ],
    name: "ValidatorExited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "pubKey",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rolupAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ValidatorShareSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "pubKey",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rolupAdmin",
        type: "address",
      },
    ],
    name: "ValidatorSubmitted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rollupAdmin",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "pubKey",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "withdrawalAddress",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "depositRoot",
            type: "bytes32",
          },
        ],
        internalType: "struct INexusInterface.Validator[]",
        name: "_validators",
        type: "tuple[]",
      },
    ],
    name: "depositValidatorRollup",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rollupAdmin",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "pubKey",
            type: "bytes",
          },
          {
            internalType: "uint64[]",
            name: "operatorIds",
            type: "uint64[]",
          },
          {
            internalType: "bytes",
            name: "sharesEncrypted",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "validatorCount",
                type: "uint32",
              },
              {
                internalType: "uint64",
                name: "networkFeeIndex",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "index",
                type: "uint64",
              },
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
              },
            ],
            internalType: "struct ISSVNetworkCore.Cluster",
            name: "cluster",
            type: "tuple",
          },
        ],
        internalType: "struct INexusInterface.ValidatorShares",
        name: "_validatorShare",
        type: "tuple",
      },
    ],
    name: "depositValidatorShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class INexusInterface__factory {
  static readonly abi = _abi;
  static createInterface(): INexusInterfaceInterface {
    return new Interface(_abi) as INexusInterfaceInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): INexusInterface {
    return new Contract(address, _abi, runner) as unknown as INexusInterface;
  }
}
