/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  NexusBridge,
  NexusBridgeInterface,
} from "../../contracts/NexusBridge";

const _abi = [
  {
    inputs: [],
    name: "IncorrectAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectWithdrawalCredentials",
    type: "error",
  },
  {
    inputs: [],
    name: "NotDAO",
    type: "error",
  },
  {
    inputs: [],
    name: "NotNexus",
    type: "error",
  },
  {
    inputs: [],
    name: "StakingLimitExceeding",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongRewardAmount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rewardReceiver",
        type: "address",
      },
    ],
    name: "RewardsRedeemed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "slashing",
        type: "bool",
      },
    ],
    name: "RewardsUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "BASIS_POINT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DAO",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEPOSIT_CONTRACT",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NEXUS_NETWORK",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VALIDATOR_DEPOSIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "pubKey",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "withdrawalAddress",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "depositRoot",
            type: "bytes32",
          },
        ],
        internalType: "struct INexusInterface.Validator[]",
        name: "_validators",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "stakingLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "validatorCount",
        type: "uint256",
      },
    ],
    name: "depositValidatorNexus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "toWallet",
        type: "address",
      },
    ],
    name: "redeemRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingReturns",
    outputs: [
      {
        internalType: "uint256",
        name: "TotalRewardsEarned",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "RewardsRedeemed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "Slashing",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "slashed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "validatorCount",
        type: "uint256",
      },
    ],
    name: "updateRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class NexusBridge__factory {
  static readonly abi = _abi;
  static createInterface(): NexusBridgeInterface {
    return new Interface(_abi) as NexusBridgeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): NexusBridge {
    return new Contract(address, _abi, runner) as unknown as NexusBridge;
  }
}
